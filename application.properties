logging.level.telran=trace

#ports
account.provider.port=8181
back.office.port=8787
notification.provider.port=8585
blocking.data.port=8484

# urls
app.back.office.srv.url=/bo/service
app.back.office.ip.url=/bo/ip

app.blocking.data.exist.url=/ip/exist
app.blocking.data.list.url=/ip/get_all
app.blocking.data.get.url=/ip/get
app.blocking.data.ips.url=/ip/get_ips

app.notification.provider.exist.url=/service/exist
app.notification.provider.list.url=/service/get_all
app.notification.provider.get.url=/service/get

app.account.provider.url=/account

# topic "to-analyzer"
spring.cloud.stream.bindings.consumerAnalyzer-in-0.destination=to-analyzer
spring.cloud.stream.bindings.consumerAnalyzer-in-0.group=transport-group
app.handler.binding.name:authenticationErrorSender-out-0
spring.cloud.stream.bindings.authenticationErrorSender-out-0.destination=to-analyzer
# topic "to-detector"
app.analyzer.binding.name=analyzerData-out-0
spring.cloud.stream.bindings.analyzerData-out-0.destination=to-detector
spring.cloud.stream.bindings.consumerIpData-in-0.destination=to-detector
spring.cloud.stream.bindings.consumerIpData-in-0.group=detector-group
# topic "to-populator"
spring.cloud.stream.bindings.BlockingPopulatorConsumer-in-0.destination=to-populator
spring.cloud.stream.bindings.BlockingPopulatorConsumer-in-0.group=to-populator
spring.cloud.stream.bindings.notifierConsumer-in-0.destination=to-populator
spring.cloud.stream.bindings.notifierConsumer-in-0.group=notifier-group
spring.cloud.stream.bindings.blockedIpData-out-0.destination=to-populator
# topic "to-updater"
spring.cloud.stream.bindings.ipDataUpdaterConsumer-in-0.destination=to-updater
spring.cloud.stream.bindings.ipDataUpdaterConsumer-in-0.group=to-updater
spring.cloud.stream.bindings.updateIpData-out-0.destination=to-updater
# topic "delete-ip"
app.back.office.ip.binding.name=deleteIP-out-0
spring.cloud.stream.bindings.deleteIP-out-0.destination=delete-ip
spring.cloud.stream.bindings.deleteIpConsumer-in-0.destination=delete-ip
spring.cloud.stream.bindings.deleteIpConsumer-in-0.group=delete-ip-group
# topic "delete-webservice"
app.back.office.srv.binding.name=deleteWebService-out-0
spring.cloud.stream.bindings.deleteWebService-out-0.destination=delete-webservice
spring.cloud.stream.bindings.deleteWebServiceConsumer-in-0.destination=delete-webservice
spring.cloud.stream.bindings.deleteWebServiceConsumer-in-0.group=delete-webservice-group

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.bootstrap-servers=pkc-12576z.us-west2.gcp.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="RQ2QRHXYIBSMHNVI" password="${CONFLUENT_SECRET}";
spring.kafka.properties.security.protocol=SASL_SSL

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000

#Mongo
spring.data.mongodb.uri=mongodb+srv://hana2user:${MONGO_PASSWORD}@cluster0.xtipyd2.mongodb.net/blocker?retryWrites=true&w=majority&appName=Cluster0

# Redis configuration
spring.data.redis.host=redis-17385.c14.us-east-1-2.ec2.redns.redis-cloud.com
spring.data.redis.port=17385
spring.data.redis.username=default
spring.data.redis.password=${REDIS_PASSWORD}